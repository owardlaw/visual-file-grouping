{"version":3,"file":"extension.js","mappings":"swBAAA,kBAEA,MAAMA,EACIC,4BAA8E,IAAIC,EAAOC,aACjFC,2BAAsEC,KAAKJ,4BAA4BK,MAC/GC,YAA2B,IAAIC,IAEhC,UAAAC,CAAWC,GAChB,MAAMC,EAAYD,GAAWR,EAAOU,OAAOC,kBAAkBC,SAASC,IAEjEJ,GAKDN,KAAKE,YAAYS,IAAIL,EAAUM,YACjCZ,KAAKE,YAAYW,OAAOP,EAAUM,YAElCZ,KAAKE,YAAYY,IAAIR,EAAUM,YAGjCZ,KAAKJ,4BAA4BmB,KAAKT,GACtCT,EAAOU,OAAOS,uBAAuB,qBAAqBV,EAAUW,WAXlEpB,EAAOU,OAAOW,iBAAiB,oBAYnC,CAEO,qBAAAC,CAAsBT,GAC3B,GAAIV,KAAKE,YAAYS,IAAID,EAAIE,YAC3B,MAAO,CACLQ,MAAO,IACPC,MAAO,IAAIxB,EAAOyB,WAAW,mCAC7BC,QAAS,cAGf,EAGF,oBAAyBC,GACvB,MAAMC,EAAqB,IAAI9B,EAC/B6B,EAAQE,cAAcC,KAAK9B,EAAOU,OAAOqB,+BAA+BH,IACxE,IAAII,EAAahC,EAAOiC,SAASC,gBAAgB,sBAAuB1B,IACtEoB,EAAmBrB,WAAWC,EAAQ,IAGxCmB,EAAQE,cAAcC,KAAKE,EAC7B,EAEA,wBAA8B,C,UC9C9BG,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://visual-file-grouping/./src/extension.ts","webpack://visual-file-grouping/external commonjs \"vscode\"","webpack://visual-file-grouping/webpack/bootstrap","webpack://visual-file-grouping/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\n\nclass MarkedFilesDecorationProvider {\n  private _onDidChangeFileDecorations: vscode.EventEmitter<vscode.Uri | vscode.Uri[]> = new vscode.EventEmitter<vscode.Uri | vscode.Uri[]>();\n  public readonly onDidChangeFileDecorations: vscode.Event<vscode.Uri | vscode.Uri[]> = this._onDidChangeFileDecorations.event;\n  private markedFiles: Set<string> = new Set();\n\n  public toggleMark(fileUri?: vscode.Uri): void {\n    const uriToMark = fileUri || vscode.window.activeTextEditor?.document.uri;\n\n    if (!uriToMark) {\n      vscode.window.showErrorMessage('No file selected.');\n      return;\n    }\n\n    if (this.markedFiles.has(uriToMark.toString())) {\n      this.markedFiles.delete(uriToMark.toString());\n    } else {\n      this.markedFiles.add(uriToMark.toString());\n    }\n\n    this._onDidChangeFileDecorations.fire(uriToMark);\n    vscode.window.showInformationMessage(`Toggled mark for: ${uriToMark.fsPath}`);\n  }\n\n  public provideFileDecoration(uri: vscode.Uri): vscode.ProviderResult<vscode.FileDecoration> {\n    if (this.markedFiles.has(uri.toString())) {\n      return {\n        badge: 'âš‘',\n        color: new vscode.ThemeColor('markedFileDecoration.background'),\n        tooltip: 'Marked File'\n      };\n    }\n  }\n}\n\nexport function activate(context: vscode.ExtensionContext) {\n  const decorationProvider = new MarkedFilesDecorationProvider();\n  context.subscriptions.push(vscode.window.registerFileDecorationProvider(decorationProvider));\n  let disposable = vscode.commands.registerCommand('extension.markFile', (fileUri?: vscode.Uri) => {\n    decorationProvider.toggleMark(fileUri);\n  });\n\n  context.subscriptions.push(disposable);\n}\n\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["MarkedFilesDecorationProvider","_onDidChangeFileDecorations","vscode","EventEmitter","onDidChangeFileDecorations","this","event","markedFiles","Set","toggleMark","fileUri","uriToMark","window","activeTextEditor","document","uri","has","toString","delete","add","fire","showInformationMessage","fsPath","showErrorMessage","provideFileDecoration","badge","color","ThemeColor","tooltip","context","decorationProvider","subscriptions","push","registerFileDecorationProvider","disposable","commands","registerCommand","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}